user                                   nobody;
worker_processes                       auto;

events {
    worker_connections                 4096;
}


http {
    include                            mime.types;
    default_type                       application/octet-stream;

    sendfile                           on;
    keepalive_timeout                  65;
    log_format  main                  '$remote_addr - $remote_user [$time_local] "$request" '
    gzip                              on;
    gzip_types                        application/vnd.apple.mpegurl;

    add_header Access-Control-Allow-Origin *;

    access_by_lua_block {
       -- read request
       ngx.req.read_body()

       local hash = ngx.var.arg_h

       -- get variables from url         
       if hash == nil then
           ngx.say("No hash is provided!")
           ngx.exit(ngx.HTTP_FORBIDDEN)
       end
 
       -- connect to redis
       local redis = require "resty.redis"
       local red = redis.new()
       red:set_timeout(1000) -- 1 sec

       local ok, err = red:connect("127.0.0.1", 6379)
       if not ok then
          ngx.say("failed to connect: ", err)
          return
       end

       -- search in redis for active session         
       -- when user logs for the first time we set redis_hash in redis from login php script
       -- HSET hash:h0000000000 watermark 0000000000
       -- HSET hash:h1111111111 watermark 1111111111
       -- HSET hash:h2222222222 watermark 2222222222
       -- HSET hash:h3333333333 watermark 3333333333
       -- HSET hash:h9999999999 watermark 9999999999

       local watermark,err = red:hget("hash:" .. hash, "watermark")

       if watermark == ngx.null then
           ngx.say("The hash is not valid!")
           ngx.exit(ngx.HTTP_FORBIDDEN)
       end

       -- set watermark variable in nginx
       ngx.var.watermark = watermark

      local ok, err = red:close()
      if not ok then
         ngx.say("failed to close connection to redis: ", err)
         return
      end

    }

    server {
        listen                        80;
        server_name                   _;
 
        set $video_files /usr/local/openresty/nginx/html/movie;
        set $watermark_files "${video_files}/hash";
        set $hash $arg_h;
        set $watermark '';

        location / {

            root   $video_files;

        }

        location ~ \.m3u8$ {

            root   $video_files;

            sub_filter_types application/vnd.apple.mpegurl;
            sub_filter '{encKeySessionid}' "h=${hash}";
            sub_filter_once off;

        }

        location ~ _256\.ts$ {
            try_files $uri-$watermark =403;
            root   $watermark_files;

        }
    }
}
